{
	"info": {
		"_postman_id": "3acb4639-3fc3-4aed-b12c-a17fb6419d11",
		"name": "Basket",
		"description": "This is the API for adding products to a basket for checking out and ordering. This comprehensive collection of endpoints allows you to seamlessly manage shopping baskets, items, and orders for our e-commerce platform. üõçÔ∏è\n\n**Things to Know:**\n\n- All endpoints require proper authentication using API tokens. üîí Feel free to use the mock server if you do not have a live key.\n    \n- Basket items can be queried with their `item_id` property. üì¶\n    \n- Utilize the `GET` endpoint to retrieve a summary of the basket contents before submitting the order. üìú\n    \n\nContact Support:  \nEmail: [cooper@postman.com](https://mailto:cooper@postman.com)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "16340986-3acb4639-3fc3-4aed-b12c-a17fb6419d11"
	},
	"item": [
		{
			"name": "basket",
			"item": [
				{
					"name": "submit-to-order",
					"item": [
						{
							"name": "Submit to order",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d4eca63d-1d5d-448c-9115-1221478a1ac4",
										"exec": [
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.status).to.exist;",
											"    pm.expect(responseData.productId).to.exist;",
											"    pm.expect(responseData.orderId).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"ProductId is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.productId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ProductId should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Verify that the orderId is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.orderId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Verify that the status is one of the expected values\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.status).to.exist.and.to.be.oneOf([\"success\", \"failed\", \"pending\"]);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0eac8b85-8d6d-401a-b43a-00a3fb8b6c39",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{basketUrl}}/basket/submit-to-order/id/{{$randomProductName}}",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"submit-to-order",
										"id",
										"{{$randomProductName}}"
									]
								},
								"description": "Submit basket to create an order and finalize purchase."
							},
							"response": [
								{
									"id": "07a84ca7-76f3-4c0c-9406-f4fe1e89c3c1",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/submit-to-order/id/{{productName}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"submit-to-order",
												"id",
												"{{productName}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Pending\",\n    \"productId\": \"{{productName}}\",\n    \"orderId\": \"{{$randomInt}}\"\n}"
								},
								{
									"id": "73f18dc0-0483-47ec-8b6d-203223922a30",
									"name": "Basket not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/submit-to-order/id/{{productName}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"submit-to-order",
												"id",
												"{{productName}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Basket not found\"\n}"
								},
								{
									"id": "d6216242-da17-421d-aee0-21610df3625d",
									"name": "Incorrect basket state",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/submit-to-order/id/{{productName}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"submit-to-order",
												"id",
												"{{productName}}"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Incorrect state - contact support\"\n}"
								},
								{
									"id": "8f356601-9aea-4d0a-838b-8d89b506c4fc",
									"name": "A server error response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/submit-to-order/id/{{productName}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"submit-to-order",
												"id",
												"{{productName}}"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"id": "8455d9f7-45bb-4db9-af34-0928d8a1825e"
				},
				{
					"name": "remove",
					"item": [
						{
							"name": "Remove from basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "716d73e0-97ad-45f8-ad2d-bfece7783049",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e22c5e43-527d-41db-9c8e-5e348d863dcd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{basketUrl}}/basket/remove/items/id/{{$randomUUID}}",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"remove",
										"items",
										"id",
										"{{$randomUUID}}"
									]
								},
								"description": "Remove item(s) from a given basket."
							},
							"response": [
								{
									"id": "f20ce984-61d6-49dc-8e5a-12f937797f66",
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/remove/items/id/{{productId}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"remove",
												"items",
												"id",
												"{{productId}}"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"deleted\",\n    \"productId\": \"{{productId}}\",\n    \"productName\": \"{{$randomProductName}}\"\n}"
								},
								{
									"id": "bf07fd67-5e54-4611-bf51-471de92c5b86",
									"name": "A server error response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/remove/items/id/{{productId}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"remove",
												"items",
												"id",
												"{{productId}}"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "6413ff6e-9e07-4beb-9101-95b11b91c354"
				},
				{
					"name": "quantity",
					"item": [
						{
							"name": "Change quantity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "625c3c0d-29d4-4f91-8eee-7433562dbbd6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Status code name has 'OK'\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7c680a4a-1277-4400-b202-71fb42ddc794",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-mock-response-code",
										"value": "500 Internal server error",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"items\": [\n    {\n      \"productOrderId1\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productOrderId2\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{basketUrl}}/basket/quantity/items/order-id/{{$randomUUID}}",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"quantity",
										"items",
										"order-id",
										"{{$randomUUID}}"
									]
								},
								"description": "Change the quantity of items/an item for a given basket."
							},
							"response": [
								{
									"id": "491751be-c27d-4d98-afd9-e7d939d19b89",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{basketUrl}}/basket/quantity/items/order-id/{{$randomUUID}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"quantity",
												"items",
												"order-id",
												"{{$randomUUID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"productOrderId1\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productOrderId2\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n  ]\n}"
								},
								{
									"id": "2d440db2-35c4-43b1-80de-97aab96857a3",
									"name": "A server error response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{basketUrl}}/basket/quantity/items/order-id/{{$randomUUID}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"quantity",
												"items",
												"order-id",
												"{{$randomUUID}}"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "019bf569-8fc9-4c7b-b1a0-ec0558806226"
				},
				{
					"name": "get",
					"item": [
						{
							"name": "Get basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9e92a4d-852f-4354-b35d-95587b242bad",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Items and Price check\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"items\");",
											"    pm.expect(pm.response.text()).to.include(\"totalPrice\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c5ef1d5b-9b32-4b9c-a159-955a54fec252",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-mock-response-code",
										"value": "500 Internal server error",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{basketUrl}}/basket/get/items",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"get",
										"items"
									]
								},
								"description": "Get the entire contents of a given basket."
							},
							"response": [
								{
									"id": "f417945d-d3fd-4c4d-89fb-16345798c51e",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/get/items",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"get",
												"items"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n  ],\n  \"totalPrice (USD)\": \"${{$randomPrice}}\"\n}"
								},
								{
									"id": "987755b2-d880-4618-8fad-605c3265464f",
									"name": "A server error response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/get/items",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"get",
												"items"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "10b3fe76-9f88-425f-8860-b8d7ffd8b5bf"
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "Delete basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccc5ec7f-69dd-49f3-8fb9-92e4bf92405e",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "be64a18a-bfb8-418c-b745-ec7339d3c163",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-mock-response-code",
										"value": "204",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{basketUrl}}/basket/delete",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"delete"
									]
								},
								"description": "Delete a given basket."
							},
							"response": [
								{
									"id": "9432d820-8a0b-448f-82cf-4e173f535988",
									"name": "Delete basket",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-mock-response-code",
												"value": "204",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/delete",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"delete"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 08 Jun 2023 16:56:02 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=a32b838b07e9659d"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=0652eace9f42e3f4"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "120"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "119"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1686243422"
										},
										{
											"key": "ETag",
											"value": "W/\"22-/fkSRjeNKBpBSuJ+dvsbBj/RWG8\""
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"id": "fd83a95d-c820-4439-b1aa-8ec5c38871f4",
									"name": "Basket not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/delete",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"delete"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"Basket not found\"\n}"
								},
								{
									"id": "f48b3b7b-8f6d-4cd3-88ae-8ae9998c402d",
									"name": "Incorrect basket state",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/delete",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"delete"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"Application conflict. Try again, or reach out to Support.\",\n  \"errorId\": \"{{$randomUUID}}\"\n}"
								},
								{
									"id": "60cb938a-4d83-40e0-8b5e-e3d7de7fab82",
									"name": "A server error response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/delete",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"delete"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "dc43292b-82cb-44af-a13a-89f744e30dac"
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b830496a-f0ee-4da1-9a5f-a484cc378011",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Valid basket user ID\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"basketUserId\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ee8ef96a-d0da-4245-8481-c7c03d7eb602",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json "
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"response\": {\n        \"username\": \"{{$randomUserName}}\",\n        \"userId\": \"{{$randomUUID}}\",\n        \"description\": \"{{$randomLoremParagraph}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{basketUrl}}/basket/create",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"create"
									]
								},
								"description": "Create a basket"
							},
							"response": [
								{
									"id": "35e6cd91-3e31-462e-b95f-da2474c06a7c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json "
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/create",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"create"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json "
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": {\n        \"basketOwner\": \"{{$body 'response.username'}}\",\n        \"basketUserId\": \"{{$body 'response.userId'}}\",\n        \"basketDescription\": \"{{$body 'response.description'}}\"\n    }\n}\n"
								},
								{
									"id": "839b0615-9ded-4b5e-b8b1-518819819537",
									"name": "Invalid user specified",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json "
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/create",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"create"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json "
										}
									],
									"cookie": [],
									"body": "{\n    \"response\": {\n        \"error\": \"Invalid user specified\"\n    }\n}"
								},
								{
									"id": "b3f5232b-730d-416a-8c06-6e22d64afbbd",
									"name": "A server error response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/create",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"create"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"response\": {\n        \"error\": \"Internal server error\"\n    }\n}"
								}
							]
						}
					],
					"id": "e1af18ca-2603-4f21-aebc-56daa9e5eeac"
				},
				{
					"name": "add-item",
					"item": [
						{
							"name": "Add items to a given basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84e29424-5809-4c8a-9587-c30e99a67778",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Items successfully added\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"itemsAdded\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "94ea85ea-6859-469a-8372-f13ebf3c8ebf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json "
									},
									{
										"key": "x-mock-response-code",
										"value": "201 Created",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"items\":\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{basketUrl}}/basket/add-item",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"add-item"
									]
								},
								"description": "Add items to basket"
							},
							"response": [
								{
									"id": "a267aac7-edfa-42fa-b7c4-b0d67c1aa2c3",
									"name": "Add items to a given basket",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json "
											},
											{
												"key": "x-mock-response-code",
												"value": "201",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\":\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{basketUrl}}/basket/add-item",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"add-item"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 08 Jun 2023 16:56:56 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=b4e1dc9394288e2d"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=982d509d17ef3755"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "120"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "108"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1686243422"
										},
										{
											"key": "ETag",
											"value": "W/\"67-HkrY92g3UAT+RgVVxQ2X878qcN4\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"itemsAdded\": {\n        \"productName\": \"Generic Frozen Keyboard\",\n        \"quantity\": \"636\"\n    }\n}"
								},
								{
									"id": "e2bcd836-869b-421c-b003-4af4dbbf495d",
									"name": "A server error response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{basketUrl}}/basket/add-item",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"add-item"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "3c66065b-7035-4adf-8afe-f02cb2bcf1ed"
				}
			],
			"id": "d4cf44fc-b8c7-4538-b755-25bab54e8b77"
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{basicAuthUsername}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{basicAuthPassword}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "a8739f7d-ec30-435c-8ce2-4bf522eeedd8",
			"key": "baseUrl",
			"value": "https://example.com"
		}
	]
}