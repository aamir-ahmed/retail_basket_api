{
	"info": {
		"_postman_id": "912a2152-bd0f-43fc-b20f-4ded08c53c1a",
		"name": "Basket",
		"description": "This is the API for adding products to a basket for checking out and ordering. This comprehensive collection of endpoints allows you to seamlessly manage shopping baskets, items, and orders for our e-commerce platform. üõçÔ∏è\n\n**Things to Know:**\n\n- All endpoints require proper authentication using API tokens. üîí Feel free to use the mock server if you do not have a live key.\n    \n- Basket items can be queried with their `item_id` property. üì¶\n    \n- Utilize the `GET` endpoint to retrieve a summary of the basket contents before submitting the order. üìú\n    \n\nContact Support:  \nEmail: [cooper@postman.com](https://mailto:cooper@postman.com)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "16340986-912a2152-bd0f-43fc-b20f-4ded08c53c1a"
	},
	"item": [
		{
			"name": "basket",
			"item": [
				{
					"name": "submit-to-order",
					"item": [
						{
							"name": "Submit to order",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a33ceb11-979d-4232-b2e2-41651c202f39",
										"exec": [
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.status).to.exist;",
											"    pm.expect(responseData.productId).to.exist;",
											"    pm.expect(responseData.orderId).to.exist;",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"ProductId is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.productId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ProductId should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Verify that the orderId is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.orderId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "aea48cd2-6cfe-4fec-9d55-4137b1f6a8c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{basketUrl}}/basket/submit-to-order/id/{{$randomProductName}}",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"submit-to-order",
										"id",
										"{{$randomProductName}}"
									]
								},
								"description": "Submit basket to create an order and finalize purchase."
							},
							"response": [
								{
									"id": "fcbd575a-a588-486c-9a16-9c8a6e6f5492",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/submit-to-order/id/{{productName}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"submit-to-order",
												"id",
												"{{productName}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Pending\",\n    \"productId\": \"{{productName}}\",\n    \"orderId\": \"{{$randomInt}}\"\n}"
								},
								{
									"id": "fe689cad-73c8-4191-9772-3db5975455d1",
									"name": "Basket not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/submit-to-order/id/{{productName}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"submit-to-order",
												"id",
												"{{productName}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Basket not found\"\n}"
								},
								{
									"id": "60af49f3-31fa-4d4b-b743-c039cc2e9a76",
									"name": "Incorrect basket state",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/submit-to-order/id/{{productName}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"submit-to-order",
												"id",
												"{{productName}}"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Incorrect state - contact support\"\n}"
								},
								{
									"id": "0a5fff05-143e-4c9e-9a36-ab2019fd397b",
									"name": "A server error response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/submit-to-order/id/{{productName}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"submit-to-order",
												"id",
												"{{productName}}"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"id": "32f5691d-11a5-4c53-ad25-1d0594def396"
				},
				{
					"name": "remove",
					"item": [
						{
							"name": "Remove from basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "484bd0cd-a03d-4602-99de-8b31af8b3fcf",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3ea32eac-86ab-4108-b394-780a56f1b25c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{basketUrl}}/basket/remove/items/id/{{$randomUUID}}",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"remove",
										"items",
										"id",
										"{{$randomUUID}}"
									]
								},
								"description": "Remove item(s) from a given basket."
							},
							"response": [
								{
									"id": "124b6e40-d578-4351-a657-5c910a824355",
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/remove/items/id/{{productId}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"remove",
												"items",
												"id",
												"{{productId}}"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"deleted\",\n    \"productId\": \"{{productId}}\",\n    \"productName\": \"{{$randomProductName}}\"\n}"
								},
								{
									"id": "26328eb5-b4e8-49f5-9661-d551b443cb39",
									"name": "A server error response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/remove/items/id/{{productId}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"remove",
												"items",
												"id",
												"{{productId}}"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "335ab5c8-0e2b-4ab1-b1f0-521a0f6b96c2"
				},
				{
					"name": "quantity",
					"item": [
						{
							"name": "Change quantity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb253c2b-b519-4643-90a0-18fca667d9a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Status code name has 'OK'\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "80979e7d-15ac-45e1-87ea-667ef447409c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-mock-response-code",
										"value": "500 Internal server error",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"items\": [\n    {\n      \"productOrderId1\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productOrderId2\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{basketUrl}}/basket/quantity/items/order-id/{{$randomUUID}}",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"quantity",
										"items",
										"order-id",
										"{{$randomUUID}}"
									]
								},
								"description": "Change the quantity of items/an item for a given basket."
							},
							"response": [
								{
									"id": "7c99e61d-0a43-4e4c-b74d-b0b92891b6d8",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{basketUrl}}/basket/quantity/items/order-id/{{$randomUUID}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"quantity",
												"items",
												"order-id",
												"{{$randomUUID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"productOrderId1\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productOrderId2\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n  ]\n}"
								},
								{
									"id": "fa0befee-7d6a-490e-9457-1fee893f129c",
									"name": "A server error response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{basketUrl}}/basket/quantity/items/order-id/{{$randomUUID}}",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"quantity",
												"items",
												"order-id",
												"{{$randomUUID}}"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "67bd9fb1-7736-4a3a-a11e-dedce794bd08"
				},
				{
					"name": "get",
					"item": [
						{
							"name": "Get basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15f2df04-c40b-4e30-8443-e685f3d57680",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Items and Price check\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"items\");",
											"    pm.expect(pm.response.text()).to.include(\"totalPrice\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "370c2c09-feb0-42ed-975a-27f169aadeef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-mock-response-code",
										"value": "500 Internal server error",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{basketUrl}}/basket/get/items",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"get",
										"items"
									]
								},
								"description": "Get the entire contents of a given basket."
							},
							"response": [
								{
									"id": "f4df2528-3dac-4b2c-a6fa-90809768c601",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/get/items",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"get",
												"items"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    },\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"productOrderId\": \"{{$randomUUID}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n  ],\n  \"totalPrice (USD)\": \"${{$randomPrice}}\"\n}"
								},
								{
									"id": "cd694e27-ffa5-4e3b-88aa-a88ad347147f",
									"name": "A server error response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/get/items",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"get",
												"items"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "c112938b-01df-4da5-a3f7-fac67f000bdd"
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "Delete basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fe55244-98a0-4019-b4f6-95dd5cf810f9",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "05658f2a-39ca-449f-bcd1-4e8afd8d51a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-mock-response-code",
										"value": "204",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{basketUrl}}/basket/delete",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"delete"
									]
								},
								"description": "Delete a given basket."
							},
							"response": [
								{
									"id": "3f476a37-6ccb-465e-a15e-f3f69414733e",
									"name": "Delete basket",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-mock-response-code",
												"value": "204",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/delete",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"delete"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 08 Jun 2023 16:56:02 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=a32b838b07e9659d"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=0652eace9f42e3f4"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "120"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "119"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1686243422"
										},
										{
											"key": "ETag",
											"value": "W/\"22-/fkSRjeNKBpBSuJ+dvsbBj/RWG8\""
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"id": "20fc2500-9346-4083-b7d2-d82f9fb8741d",
									"name": "Basket not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/delete",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"delete"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"Basket not found\"\n}"
								},
								{
									"id": "10a492de-dc46-4baa-aa03-b28abf516007",
									"name": "Incorrect basket state",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/delete",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"delete"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"Application conflict. Try again, or reach out to Support.\",\n  \"errorId\": \"{{$randomUUID}}\"\n}"
								},
								{
									"id": "5d691fe8-3afb-44eb-95fc-cdc24d35a0f4",
									"name": "A server error response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/delete",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"delete"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "2a407068-7ba1-4a4e-bab8-940f7b171e4c"
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b0a1ec3-4b85-485b-b847-03ef6aef9939",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Valid basket user ID\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"basketUserId\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c331d120-b97c-4bde-af0e-0d6cf1e5d1ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json "
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"response\": {\n        \"username\": \"{{$randomUserName}}\",\n        \"userId\": \"{{$randomUUID}}\",\n        \"description\": \"{{$randomLoremParagraph}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{basketUrl}}/basket/create",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"create"
									]
								},
								"description": "Create a basket"
							},
							"response": [
								{
									"id": "033f4577-f6db-4764-9048-09f117b6f518",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json "
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/create",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"create"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json "
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": {\n        \"basketOwner\": \"{{$body 'response.username'}}\",\n        \"basketUserId\": \"{{$body 'response.userId'}}\",\n        \"basketDescription\": \"{{$body 'response.description'}}\"\n    }\n}\n"
								},
								{
									"id": "6440a534-b5ab-4394-94e9-90a881bf6fbc",
									"name": "Invalid user specified",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json "
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/create",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"create"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json "
										}
									],
									"cookie": [],
									"body": "{\n    \"response\": {\n        \"error\": \"Invalid user specified\"\n    }\n}"
								},
								{
									"id": "aedf8085-509a-4f62-871d-93bc4505482a",
									"name": "A server error response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{basketUrl}}/basket/create",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"create"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"response\": {\n        \"error\": \"Internal server error\"\n    }\n}"
								}
							]
						}
					],
					"id": "3b7e7971-f156-4c98-966c-c5f335ebc69d"
				},
				{
					"name": "add-item",
					"item": [
						{
							"name": "Add items to a given basket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ace2cb9c-1d97-4388-87e6-85bf8bdef180",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Items successfully added\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"itemsAdded\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "60178077-f188-4bc0-a128-b09c4f2f282c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json "
									},
									{
										"key": "x-mock-response-code",
										"value": "201 Created",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"items\":\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{basketUrl}}/basket/add-item",
									"host": [
										"{{basketUrl}}"
									],
									"path": [
										"basket",
										"add-item"
									]
								},
								"description": "Add items to basket"
							},
							"response": [
								{
									"id": "f2425a48-519c-480f-8ed5-4bb3d5101e57",
									"name": "Add items to a given basket",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json "
											},
											{
												"key": "x-mock-response-code",
												"value": "201",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\":\n    {\n      \"productName\": \"{{$randomProductName}}\",\n      \"quantity\": \"{{$randomInt}}\"\n    }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{basketUrl}}/basket/add-item",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"add-item"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 08 Jun 2023 16:56:56 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=b4e1dc9394288e2d"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=982d509d17ef3755"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "120"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "108"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1686243422"
										},
										{
											"key": "ETag",
											"value": "W/\"67-HkrY92g3UAT+RgVVxQ2X878qcN4\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										}
									],
									"cookie": [],
									"body": "{\n    \"itemsAdded\": {\n        \"productName\": \"Generic Frozen Keyboard\",\n        \"quantity\": \"636\"\n    }\n}"
								},
								{
									"id": "62745fec-3c2d-48ad-9ee2-23f3e89c0510",
									"name": "A server error response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"quantity\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{basketUrl}}/basket/add-item",
											"host": [
												"{{basketUrl}}"
											],
											"path": [
												"basket",
												"add-item"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Internal server error\"\n}"
								}
							]
						}
					],
					"id": "29369738-e407-4dff-b320-c8592c423874"
				}
			],
			"id": "48f1802b-8592-4af8-ac44-1e2353f9b930"
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{basicAuthUsername}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{basicAuthPassword}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "c7ac6f39-debc-47c7-9e46-e30ad519cd85",
			"key": "baseUrl",
			"value": "https://example.com"
		}
	]
}